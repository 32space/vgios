/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package touchgl.core;

public class GiView {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected GiView(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GiView obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        touchglJNI.delete_GiView(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    touchglJNI.GiView_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    touchglJNI.GiView_change_ownership(this, swigCPtr, true);
  }

  public void regenAll(boolean changed) {
    if (getClass() == GiView.class) touchglJNI.GiView_regenAll(swigCPtr, this, changed); else touchglJNI.GiView_regenAllSwigExplicitGiView(swigCPtr, this, changed);
  }

  public void regenAppend(int sid) {
    if (getClass() == GiView.class) touchglJNI.GiView_regenAppend(swigCPtr, this, sid); else touchglJNI.GiView_regenAppendSwigExplicitGiView(swigCPtr, this, sid);
  }

  public void redraw() {
    if (getClass() == GiView.class) touchglJNI.GiView_redraw(swigCPtr, this); else touchglJNI.GiView_redrawSwigExplicitGiView(swigCPtr, this);
  }

  public boolean useFinger() {
    return (getClass() == GiView.class) ? touchglJNI.GiView_useFinger(swigCPtr, this) : touchglJNI.GiView_useFingerSwigExplicitGiView(swigCPtr, this);
  }

  public boolean isContextActionsVisible() {
    return (getClass() == GiView.class) ? touchglJNI.GiView_isContextActionsVisible(swigCPtr, this) : touchglJNI.GiView_isContextActionsVisibleSwigExplicitGiView(swigCPtr, this);
  }

  public boolean showContextActions(Ints actions, Floats buttonXY, float x, float y, float w, float h) {
    return (getClass() == GiView.class) ? touchglJNI.GiView_showContextActions(swigCPtr, this, Ints.getCPtr(actions), actions, Floats.getCPtr(buttonXY), buttonXY, x, y, w, h) : touchglJNI.GiView_showContextActionsSwigExplicitGiView(swigCPtr, this, Ints.getCPtr(actions), actions, Floats.getCPtr(buttonXY), buttonXY, x, y, w, h);
  }

  public void commandChanged() {
    if (getClass() == GiView.class) touchglJNI.GiView_commandChanged(swigCPtr, this); else touchglJNI.GiView_commandChangedSwigExplicitGiView(swigCPtr, this);
  }

  public void selectionChanged() {
    if (getClass() == GiView.class) touchglJNI.GiView_selectionChanged(swigCPtr, this); else touchglJNI.GiView_selectionChangedSwigExplicitGiView(swigCPtr, this);
  }

  public void contentChanged() {
    if (getClass() == GiView.class) touchglJNI.GiView_contentChanged(swigCPtr, this); else touchglJNI.GiView_contentChangedSwigExplicitGiView(swigCPtr, this);
  }

  public void dynamicChanged() {
    if (getClass() == GiView.class) touchglJNI.GiView_dynamicChanged(swigCPtr, this); else touchglJNI.GiView_dynamicChangedSwigExplicitGiView(swigCPtr, this);
  }

  public void viewChanged(GiView oldview) {
    if (getClass() == GiView.class) touchglJNI.GiView_viewChanged(swigCPtr, this, GiView.getCPtr(oldview), oldview); else touchglJNI.GiView_viewChangedSwigExplicitGiView(swigCPtr, this, GiView.getCPtr(oldview), oldview);
  }

  public GiView() {
    this(touchglJNI.new_GiView(), true);
    touchglJNI.GiView_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

}
